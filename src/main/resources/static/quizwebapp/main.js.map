{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/competitive/competitive.module.ts","webpack:///./src/app/competitive/competitive.routing.ts","webpack:///./src/app/competitive/components/competitive-home/competitive-home.component.css","webpack:///./src/app/competitive/components/competitive-home/competitive-home.component.html","webpack:///./src/app/competitive/components/competitive-home/competitive-home.component.ts","webpack:///./src/app/competitive/components/create-question/create-question.component.css","webpack:///./src/app/competitive/components/create-question/create-question.component.html","webpack:///./src/app/competitive/components/create-question/create-question.component.ts","webpack:///./src/app/competitive/components/create-question/generic-question/generic-question.component.css","webpack:///./src/app/competitive/components/create-question/generic-question/generic-question.component.html","webpack:///./src/app/competitive/components/create-question/generic-question/generic-question.component.ts","webpack:///./src/app/competitive/components/create-question/question-types/create-question-code-block/create-question-code-block.component.css","webpack:///./src/app/competitive/components/create-question/question-types/create-question-code-block/create-question-code-block.component.html","webpack:///./src/app/competitive/components/create-question/question-types/create-question-code-block/create-question-code-block.component.ts","webpack:///./src/app/competitive/components/create-question/question-types/create-question-option/create-question-option.component.css","webpack:///./src/app/competitive/components/create-question/question-types/create-question-option/create-question-option.component.html","webpack:///./src/app/competitive/components/create-question/question-types/create-question-option/create-question-option.component.ts","webpack:///./src/app/competitive/components/create-question/question-types/model/optionCodeBlock.ts","webpack:///./src/app/competitive/components/play-question/directives/question.directive.ts","webpack:///./src/app/competitive/components/play-question/play-question.component.css","webpack:///./src/app/competitive/components/play-question/play-question.component.html","webpack:///./src/app/competitive/components/play-question/play-question.component.ts","webpack:///./src/app/competitive/services/competitive.services.ts","webpack:///./src/app/history/components/level/directives/question.directive.ts","webpack:///./src/app/history/components/level/level.component.css","webpack:///./src/app/history/components/level/level.component.html","webpack:///./src/app/history/components/level/level.component.ts","webpack:///./src/app/history/components/section/section.component.css","webpack:///./src/app/history/components/section/section.component.html","webpack:///./src/app/history/components/section/section.component.ts","webpack:///./src/app/history/components/sections/sections.component.css","webpack:///./src/app/history/components/sections/sections.component.html","webpack:///./src/app/history/components/sections/sections.component.ts","webpack:///./src/app/history/history.module.ts","webpack:///./src/app/history/history.routing.ts","webpack:///./src/app/history/model/level.model.ts","webpack:///./src/app/history/model/section.model.ts","webpack:///./src/app/history/services/level.guard.ts","webpack:///./src/app/history/services/sections.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/components/login/login.component.css","webpack:///./src/app/login/components/login/login.component.html","webpack:///./src/app/login/components/login/login.component.ts","webpack:///./src/app/login/components/register/register.component.css","webpack:///./src/app/login/components/register/register.component.html","webpack:///./src/app/login/components/register/register.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.routing.ts","webpack:///./src/app/login/services/auth.guard.ts","webpack:///./src/app/login/services/authentication.service.ts","webpack:///./src/app/login/services/jwt.interceptor.ts","webpack:///./src/app/profile/components/custom-questions/custom-questions.component.css","webpack:///./src/app/profile/components/custom-questions/custom-questions.component.html","webpack:///./src/app/profile/components/custom-questions/custom-questions.component.ts","webpack:///./src/app/profile/components/profile/profile.component.css","webpack:///./src/app/profile/components/profile/profile.component.html","webpack:///./src/app/profile/components/profile/profile.component.ts","webpack:///./src/app/profile/components/rank-level/rank-level.component.css","webpack:///./src/app/profile/components/rank-level/rank-level.component.html","webpack:///./src/app/profile/components/rank-level/rank-level.component.ts","webpack:///./src/app/profile/profile.module.ts","webpack:///./src/app/profile/profile.routing.ts","webpack:///./src/app/profile/services/user.service.ts","webpack:///./src/app/question/components/question-code-block/question-code-block.component.css","webpack:///./src/app/question/components/question-code-block/question-code-block.component.html","webpack:///./src/app/question/components/question-code-block/question-code-block.component.ts","webpack:///./src/app/question/components/question-options/question-options.component.css","webpack:///./src/app/question/components/question-options/question-options.component.html","webpack:///./src/app/question/components/question-options/question-options.component.ts","webpack:///./src/app/question/model/question-duo.ts","webpack:///./src/app/question/question.module.ts","webpack:///./src/app/shared/components/formatted-text/formatted-text.component.css","webpack:///./src/app/shared/components/formatted-text/formatted-text.component.html","webpack:///./src/app/shared/components/formatted-text/formatted-text.component.ts","webpack:///./src/app/shared/components/level-card/level-card.component.css","webpack:///./src/app/shared/components/level-card/level-card.component.html","webpack:///./src/app/shared/components/level-card/level-card.component.ts","webpack:///./src/app/shared/components/navbar/navbar.component.css","webpack:///./src/app/shared/components/navbar/navbar.component.html","webpack:///./src/app/shared/components/navbar/navbar.component.ts","webpack:///./src/app/shared/components/section-card/section-card.component.css","webpack:///./src/app/shared/components/section-card/section-card.component.html","webpack:///./src/app/shared/components/section-card/section-card.component.ts","webpack:///./src/app/shared/components/trophies/trophies.component.css","webpack:///./src/app/shared/components/trophies/trophies.component.html","webpack:///./src/app/shared/components/trophies/trophies.component.ts","webpack:///./src/app/shared/model/info-user.model.ts","webpack:///./src/app/shared/services/exception.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/shared.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-navbar></app-navbar>\\n\\n<div class=\\\"container main-container\\\">\\n\\n    <div *ngIf=\\\"alertException\\\" class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\">\\n        <h4 class=\\\"alert-heading\\\">Oh, no!</h4>\\n        <p>Ha ocurrido un error fuera de nuestro alcance, cuando seas programador podremos explicarte el porque. Hasta entonces, espera unos minutos a ver si se arregla solo.</p>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeException()\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <router-outlet></router-outlet>\\n\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { ExceptionService } from './shared/services/exception.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  status: any;\n  subscription: Subscription;\n  title = 'quizwebapp';\n\n  alertException: boolean;\n\n  constructor(private exceptionService: ExceptionService) {\n    this.subscription = this.exceptionService\n      .getException()\n      .subscribe(status => {\n        if (status != 400) {\n          this.status = status;\n          this.alertException = true;\n        }\n      });\n  }\n\n  closeException() {\n    this.alertException = false;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { routing } from './app.routing';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { JwtInterceptor } from './login/services/jwt.interceptor';\r\n\r\nimport { HistoryModule } from './history/history.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { ProfileModule } from './profile/profile.module';\r\nimport { LoginModule } from './login/login.module';\r\nimport { CompetitiveModule } from './competitive/competitive.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    routing,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    HistoryModule,\r\n    ProfileModule,\r\n    LoginModule,\r\n    CompetitiveModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/components/login/login.component';\r\nimport { AuthGuard } from './login/services/auth.guard';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'login', component: LoginComponent },\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompetitiveHomeComponent } from './components/competitive-home/competitive-home.component';\r\n\r\nimport { routing } from './competitive.routing';\r\nimport { CreateQuestionComponent } from './components/create-question/create-question.component';\r\nimport { CreateQuestionOptionComponent } from './components/create-question/question-types/create-question-option/create-question-option.component';\r\nimport { CreateQuestionCodeBlockComponent } from './components/create-question/question-types/create-question-code-block/create-question-code-block.component';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PlayQuestionComponent } from './components/play-question/play-question.component';\r\n\r\nimport { QuestionDirective } from './components/play-question/directives/question.directive';\r\nimport { QuestionModule } from '../question/question.module';\nimport { GenericQuestionComponent } from './components/create-question/generic-question/generic-question.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    routing,\r\n    ReactiveFormsModule,\r\n    QuestionModule\r\n  ],\r\n  declarations: [\r\n    CompetitiveHomeComponent,\r\n    CreateQuestionComponent,\r\n    CreateQuestionOptionComponent,\r\n    CreateQuestionCodeBlockComponent,\r\n    PlayQuestionComponent,\r\n    QuestionDirective,\r\n    GenericQuestionComponent\r\n  ]\r\n})\r\nexport class CompetitiveModule { }\r\n","import { Routes, RouterModule, CanActivate } from '@angular/router';\r\nimport { AuthGuard } from '../login/services/auth.guard';\r\nimport { CompetitiveHomeComponent } from './components/competitive-home/competitive-home.component';\r\nimport { CreateQuestionComponent } from './components/create-question/create-question.component';\r\nimport { PlayQuestionComponent } from './components/play-question/play-question.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'competitive', component: CompetitiveHomeComponent, canActivate: [AuthGuard]  },\r\n    { path: 'createQuestion', component: CreateQuestionComponent, canActivate: [AuthGuard] },\r\n    { path: 'playQuestion', component: PlayQuestionComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(appRoutes);\r\n","module.exports = \"\"","module.exports = \"<h1>Mode competitive</h1>\\r\\n<hr>\\r\\n\\r\\n<div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col-sm-6\\\" style=\\\"margin-bottom: 15px;\\\">\\r\\n        <div class=\\\"card\\\" style=\\\"height:100%\\\">\\r\\n            <div>\\r\\n                <img class=\\\"card-img-top\\\" src=\\\"assets/play.jpeg\\\" style=\\\"height:30%;\\\" alt=\\\"Card image cap\\\">\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h1 class=\\\"card-title\\\">Play!</h1>\\r\\n                <hr>\\r\\n                <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\r\\n                <button (click)=\\\"play()\\\" class=\\\"btn btn-primary\\\">Go somewhere</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"card\\\" style=\\\"height:100%\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"card-img-top\\\" src=\\\"assets/build.png\\\" style=\\\"height:30%;\\\" alt=\\\"Card image cap\\\">\\r\\n                </div>\\r\\n                <h1 class=\\\"card-title\\\">Create!</h1>\\r\\n                <hr>\\r\\n                <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\r\\n                <button (click)=\\\"createQuestion()\\\" class=\\\"btn btn-primary\\\">Go somewhere</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-competitive-home',\r\n  templateUrl: './competitive-home.component.html',\r\n  styleUrls: ['./competitive-home.component.css']\r\n})\r\nexport class CompetitiveHomeComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createQuestion() {\r\n    this.router.navigate( ['/createQuestion'] );\r\n  }\r\n\r\n  play() {\r\n    this.router.navigate( ['/playQuestion'] );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card \\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <ul class=\\\"nav nav-tabs card-header-tabs pull-right\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#options\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Options</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#codeBlock\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">CodeBlock</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\r\\n            <div class=\\\"tab-pane fade show active\\\" id=\\\"options\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\r\\n                <app-create-question-option (newQuestionEvent)=\\\"newQuestion($event)\\\"></app-create-question-option>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane fade\\\" id=\\\"codeBlock\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"profile-tab\\\">\\r\\n                <app-create-question-code-block (newQuestionEvent)=\\\"newQuestion($event)\\\"></app-create-question-code-block>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" #modalCreated tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Question created!</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          Ya has creado la pregunta. ¿Quieres seguir creando preguntas?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"continue()\\\">Continue</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"exit()\\\">Exit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CompetitiveService } from '../../services/competitive.services';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'app-create-question',\r\n  templateUrl: './create-question.component.html',\r\n  styleUrls: ['./create-question.component.css']\r\n})\r\nexport class CreateQuestionComponent implements OnInit {\r\n  @ViewChild('modalCreated') myModal;\r\n\r\n  constructor(private router: Router, private service: CompetitiveService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  newQuestion(newQuestion: any) {\r\n    this.service\r\n      .createNewQuestion(newQuestion).subscribe(\r\n        data => {\r\n          jQuery(this.myModal.nativeElement).modal('show');\r\n        },\r\n        error => {\r\n            \r\n        });\r\n  }\r\n\r\n  continue() {\r\n    this.router\r\n      .navigateByUrl('/RefrshComponent', {skipLocationChange: true})\r\n      .then(() =>\r\n          this.router.navigate(['/createQuestion'])\r\n      );\r\n  }\r\n\r\n  exit() {\r\n    this.router.navigate(['/competitive']);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"questionForm\\\">\\n\\n  <div class=\\\"form-group\\\" style=\\\"width: 100%;\\\">\\n      <label>Titulo</label>\\n      <input formControlName=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': (q.title.touched || submitted ) && q.title.errors }\\\">\\n      <div *ngIf=\\\"(q.title.touched || submitted ) && q.title.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"q.title.errors.required\\\">El titulo no puede estar vacio</div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" style=\\\"width: 100%\\\">\\n      <label for=\\\"exampleInputPassword1\\\">Statement</label>\\n      <textarea formControlName=\\\"statement\\\" rows=\\\"8\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': (q.statement.touched || submitted ) && q.statement.errors }\\\"></textarea>\\n      <div *ngIf=\\\"(q.statement.touched || submitted ) && q.statement.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"q.statement.errors.required\\\">El enunciado no puede estar vacio</div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" style=\\\"width: 100%\\\">\\n      <label style=\\\"margin-right: 4px\\\">Código</label>\\n      <button class=\\\"btn btn-secondary btn-sm\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" (click)=\\\"toggleCodeBlock()\\\" data-target=\\\"#collapseCode\\\"\\n          aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\n          {{nameToggleCode}}\\n      </button>\\n      <div class=\\\"collapse\\\" id=\\\"collapseCode\\\" style=\\\"margin-top: 10px\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <label class=\\\"input-group-text\\\">Lenguaje</label>\\n              </div>\\n              <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" formControlName=\\\"language\\\">\\n                <option value=\\\"javascript\\\" selected>Javascript</option>\\n                <option value=\\\"html\\\">HTML</option>\\n                <option value=\\\"css\\\">CSS</option>\\n              </select>\\n            </div>\\n          <textarea formControlName=\\\"codeBlock\\\" rows=\\\"8\\\" class=\\\"form-control\\\"></textarea>\\n      </div>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-generic-question',\n  templateUrl: './generic-question.component.html',\n  styleUrls: ['./generic-question.component.css']\n})\nexport class GenericQuestionComponent implements OnInit {\n  submitted: boolean;\n  questionForm: any;\n\n  nameToggleCode = \"Mostrar\";\n  toggleCode:boolean;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.questionForm = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]],\n      statement: ['', [Validators.required]],\n      codeBlock: ['', []],\n      language: ['', []]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  toggleCodeBlock() {\n    if (this.toggleCode) {\n      this.nameToggleCode = \"Mostrar\";\n      this.toggleCode = false;\n    } else {\n      this.nameToggleCode = \"Ocultar\";\n      this.toggleCode = true;\n    }\n  }\n\n  get q() {\n    return this.questionForm.controls;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <app-generic-question></app-generic-question>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n            <form [formGroup]=\\\"optionsForm\\\">\\r\\n\\r\\n                <div class=\\\"form-group\\\" style=\\\"width: 100%;\\\">\\r\\n                    <label for=\\\"exampleInputEmail1\\\">Options</label>\\r\\n                    <div class=\\\"input-group mb-3\\\" *ngFor=\\\"let option of options;let i = index\\\">\\r\\n                        <input (input)=\\\"onOptionChange($event.target.value, option)\\\" type=\\\"text\\\" formControlName=\\\"{{option.id}}\\\"\\r\\n                            class=\\\"form-control\\\" [ngClass]=\\\"getNgClass(option.id)\\\">\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-warning\\\" (click)=\\\"convertInCorrect(option)\\\" type=\\\"button\\\"><span\\r\\n                                    class=\\\"{{option.icon}}\\\"></span></button>\\r\\n                        </div>\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"removeOption(option)\\\" type=\\\"button\\\"><span\\r\\n                                    class=\\\"fa fa-close\\\"></span></button>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"getIfOption(option.id, 0)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"getIfOption(option.id, 1)\\\">La opcion no puede estar vacia</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"isLastOption\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeAlert()\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n                        Tiene que haber por lo menos dos opciones.\\r\\n                    </div>\\r\\n                    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\r\\n                        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\r\\n                            <button (click)=\\\"addOption()\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\">Add</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" style=\\\"width: 100%;\\\">\\r\\n                    <label for=\\\"exampleInputEmail1\\\">Correct Options</label>\\r\\n                    <div class=\\\"input-group mb-3\\\" *ngFor=\\\"let option of correctOptions;let i = index\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                            <span class=\\\"input-group-text\\\">{{i+1}}</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"correct{{option.id}}\\\" class=\\\"form-control\\\" readonly=true>\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"removeCorrectOption(option)\\\" type=\\\"button\\\"><span\\r\\n                                    class=\\\"fa fa-close\\\"></span></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"isLastOptionCorrect\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeAlert()\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n                        Tiene que haber por lo menos una opcion correcta.\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n<button (click)=\\\"save()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\"","import { Component, OnInit, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { OptionCodeBlock } from '../model/optionCodeBlock';\r\nimport { GenericQuestionComponent } from '../../generic-question/generic-question.component';\r\n\r\n@Component({\r\n  selector: 'app-create-question-code-block',\r\n  templateUrl: './create-question-code-block.component.html',\r\n  styleUrls: ['./create-question-code-block.component.css']\r\n})\r\nexport class CreateQuestionCodeBlockComponent implements OnInit {\r\n  iconNoCorrectOption = 'fa fa-star-o';\r\n  iconCorrectOption = 'fa fa-star';\r\n\r\n  @ViewChild(GenericQuestionComponent) genericQuestion: GenericQuestionComponent;\r\n  @Output() newQuestionEvent: EventEmitter<any> = new EventEmitter();\r\n\r\n  contById = 0;\r\n  options: OptionCodeBlock[] = [];\r\n  correctOptions: OptionCodeBlock[] = [];\r\n  questionForm: FormGroup;\r\n  optionsForm: FormGroup;\r\n\r\n  submitted: boolean;\r\n  isLastOption: boolean;\r\n  isLastOptionCorrect: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    const firstOption = new OptionCodeBlock(this.contById);\r\n    this.contById++;\r\n    const secondOption = new OptionCodeBlock(this.contById);\r\n    secondOption.icon = this.iconNoCorrectOption;\r\n\r\n    this.options.push(firstOption);\r\n    this.options.push(secondOption);\r\n    this.optionsForm = this.createForm();\r\n    this.convertInCorrect(firstOption);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  convertInCorrect(option) {\r\n    const indexCorrect = this.correctOptions.indexOf(option);\r\n\r\n    if (indexCorrect === -1) {\r\n      this.correctOptions.push(option);\r\n      const value = this.optionsForm.controls[option.id].value;\r\n      this.optionsForm.controls['correct' + option.id] = new FormControl('');\r\n      this.optionsForm.controls['correct' + option.id].setValue(value);\r\n      \r\n      const index = this.options.indexOf(option);\r\n      this.options[index].icon = this.iconCorrectOption;\r\n    }\r\n  }\r\n\r\n  onOptionChange(value, option) {\r\n    const index = this.correctOptions.indexOf(option);\r\n\r\n    if (index > -1) {\r\n      this.optionsForm.controls['correct' + option.id].setValue(value);\r\n    }\r\n  }\r\n\r\n  removeOption(option) {\r\n    if (this.options.length == 2) {\r\n      this.isLastOption = true;\r\n      return;\r\n    }\r\n\r\n    let index = this.options.indexOf(option);\r\n    this.options.splice(index, 1);\r\n    delete this.optionsForm.controls[option.id];\r\n\r\n    index = this.correctOptions.indexOf(option);\r\n\r\n    if (index > -1) {\r\n      this.correctOptions.splice(index, 1);\r\n      delete this.optionsForm.controls['correct' + option.id];\r\n    }\r\n  }\r\n\r\n  addOption() {\r\n    this.contById++;\r\n    \r\n    const option = new OptionCodeBlock(this.contById);\r\n    option.icon = this.iconNoCorrectOption;\r\n    this.optionsForm.controls[option.id] = new FormControl('', Validators.required);\r\n\r\n    this.options.push(option);\r\n  }\r\n\r\n  removeCorrectOption(option) {\r\n    if (this.correctOptions.length == 1) {\r\n      this.isLastOptionCorrect = true;\r\n      return;\r\n    }\r\n    let index = this.correctOptions.indexOf(option);\r\n\r\n    this.correctOptions.splice(index, 1);\r\n    delete this.optionsForm.controls['correct' + option.id];\r\n\r\n    index = this.options.indexOf(option);\r\n    this.options[index].icon = this.iconNoCorrectOption;\r\n  }\r\n\r\n  createForm() {\r\n    const group: any = {};\r\n\r\n    this.options.forEach(option => {\r\n      group[option.id] = new FormControl('', Validators.required);\r\n    });\r\n\r\n    return new FormGroup(group);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    this.genericQuestion.submitted = true;\r\n\r\n    const questionForm = this.genericQuestion.questionForm;\r\n    const optionsForm = this.optionsForm;\r\n\r\n    if (questionForm.invalid || optionsForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const q = questionForm.controls;\r\n    const o = optionsForm.controls;\r\n\r\n    const optionsObj = [];\r\n    const correctOptionsObj = [];\r\n\r\n    this.options.forEach(\r\n      function(option) {\r\n        const value = o[option.id].value;\r\n        optionsObj.push(value);\r\n      }\r\n    );\r\n\r\n    this.correctOptions.forEach(\r\n      function(correctOption) {\r\n        const value = o['correct' + correctOption.id].value;\r\n        correctOptionsObj.push(value);\r\n      }\r\n    );\r\n\r\n    const withCode = this.genericQuestion.toggleCode;\r\n\r\n    const newQuestion = {\r\n      'title': q.title.value,\r\n      'statement': q.statement.value,\r\n      'type': 'codeBlock',\r\n      'codeBlock': withCode ? q.codeBlock.value : null,\r\n      'programmingLanguage': withCode ? q.language.value : null,\r\n      'codeBlocksOptions': optionsObj,\r\n      'codeBlocksCorrect': correctOptionsObj\r\n    };\r\n\r\n    this.newQuestionEvent.emit(newQuestion);\r\n\r\n  }\r\n\r\n  getIfOption(id, type) {\r\n    const o = this.optionsForm.controls;\r\n\r\n    if (type == 0) {\r\n      return (o[id].touched || this.submitted) && o[id].errors;\r\n    }\r\n\r\n    else if (type == 1) {\r\n      return o[id].errors.required;\r\n    }\r\n  }\r\n\r\n  getNgClass(id) {\r\n    var o = this.optionsForm.controls;\r\n\r\n    return { 'is-invalid': (o[id].touched || this.submitted) && o[id].errors };\r\n  }\r\n\r\n  closeAlert() {\r\n    this.isLastOption = false;\r\n    this.isLastOptionCorrect = false;\r\n  }\r\n\r\n  get q() {\r\n    return this.questionForm.controls;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <app-generic-question></app-generic-question>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n            <form [formGroup]=\\\"optionsForm\\\">\\r\\n                <div class=\\\"form-group\\\" style=\\\"width: 100%;\\\">\\r\\n\\r\\n                    <label>Opciones</label>\\r\\n                    <div class=\\\"input-group mb-3\\\" *ngFor=\\\"let option of options;let i = index\\\">\\r\\n                        <input [formControlName]=\\\"option\\\" type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"getNgClass(option)\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <input formControlName=\\\"{{option}}isCorrect\\\" type=\\\"checkbox\\\" (change)=\\\"changeIsCorrectOption(option)\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"removeOption(option)\\\" type=\\\"button\\\"><span\\r\\n                                    class=\\\"fa fa-close\\\"></span></button>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"getIfOption(option, 0)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"getIfOption(option, 1)\\\">La opcion no puede estar vacia</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"isLastOption\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeAlert()\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n                        Tiene que haber por lo menos dos opciones.\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"isLastOptionCorrect\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeAlert()\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n                        Tiene que haber por lo menos una opcion correcta.\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"isAllOptionCorrect\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeAlert()\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n                        No todas las opciones pueden ser correctas.\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\r\\n                        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\r\\n                            <button (click)=\\\"addOption()\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\">Add</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n<button (click)=\\\"save()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\"","import { Component, OnInit, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { GenericQuestionComponent } from '../../generic-question/generic-question.component';\r\n\r\n@Component({\r\n  selector: 'app-create-question-option',\r\n  templateUrl: './create-question-option.component.html',\r\n  styleUrls: ['./create-question-option.component.css']\r\n})\r\nexport class CreateQuestionOptionComponent implements OnInit {\r\n  @ViewChild(GenericQuestionComponent) genericQuestion: GenericQuestionComponent;\r\n  @Output() newQuestionEvent: EventEmitter<any> = new EventEmitter();\r\n\r\n  optionsForm: FormGroup;\r\n  options: any = ['option0', 'option1'];\r\n  contById = 1;\r\n\r\n  submitted: boolean;\r\n  isLastOption: boolean;\r\n  isLastOptionCorrect: boolean;\r\n  isAllOptionCorrect: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n\r\n    this.optionsForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addOption() {\r\n    this.isLastOption = false;\r\n    this.contById++;\r\n    let id = this.contById;\r\n\r\n    this.optionsForm.controls['option' + id] = new FormControl('', Validators.required);\r\n    this.optionsForm.controls['option' + id + 'isCorrect'] = new FormControl();\r\n    this.options.push('option' + id);\r\n  }\r\n\r\n  removeOption(option) {\r\n    var o = this.optionsForm.controls;\r\n    this.isLastOption = false;\r\n\r\n    if (this.options.length == 2) {\r\n      this.isLastOption = true;\r\n      return;\r\n    }\r\n\r\n    if (this.getNumCorrectOption() == 1 && o[option + 'isCorrect'].value) {\r\n      this.isLastOptionCorrect = true;\r\n      return;\r\n    }\r\n\r\n    delete o[option];\r\n    delete o[option + 'isCorrect'];\r\n\r\n    const index = this.options.indexOf(option);\r\n    this.options.splice(index, 1);\r\n  }\r\n\r\n  changeIsCorrectOption(option) {\r\n    var o = this.optionsForm.controls;\r\n    this.closeAlert();\r\n\r\n    const cont = this.getNumCorrectOption();\r\n\r\n    if (o[option + 'isCorrect'].value) {\r\n\r\n      if (cont === this.options.length) {\r\n        this.isAllOptionCorrect = true;\r\n        o[option+'isCorrect'].setValue(false);\r\n      }\r\n\r\n    } else {\r\n\r\n      if (!(cont > 0)) {\r\n        this.isLastOptionCorrect = true;\r\n        o[option + 'isCorrect'].setValue(true);\r\n      } \r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    const group: any = {};\r\n    var cont = 0;\r\n\r\n    this.options.forEach(option => {\r\n      group[option] = new FormControl('', Validators.required);\r\n      group[option + 'isCorrect'] = new FormControl();\r\n\r\n      if (cont == 0) {\r\n        group[option + 'isCorrect'].value = true;\r\n      }\r\n\r\n      cont++;\r\n    });\r\n\r\n    return new FormGroup(group);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    this.genericQuestion.submitted = true;\r\n\r\n    const questionForm = this.genericQuestion.questionForm;\r\n    const optionsForm = this.optionsForm;\r\n\r\n    if (questionForm.invalid || optionsForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const q = questionForm.controls;\r\n    const o = optionsForm.controls;\r\n\r\n    const optionsObj = [];\r\n\r\n    this.options.forEach(\r\n      function (value) {\r\n        const optionObj = {\r\n          'value': o[value].value,\r\n          'correct': o[value + 'isCorrect'].value\r\n        };\r\n\r\n        optionsObj.push(optionObj);\r\n      }\r\n    );\r\n    \r\n    const withCode = this.genericQuestion.toggleCode;\r\n\r\n    const newQuestion = {\r\n      'title': q.title.value,\r\n      'statement': q.statement.value,\r\n      'type': 'option',\r\n      'codeBlock': withCode ? q.codeBlock.value : null,\r\n      'programmingLanguage': withCode ? q.language.value : null,\r\n      'options': optionsObj\r\n    };\r\n\r\n    this.newQuestionEvent.emit(newQuestion);\r\n  }\r\n\r\n  getNgClass(option) {\r\n    var o = this.optionsForm.controls;\r\n\r\n    return { 'is-invalid': (o[option].touched || this.submitted) && o[option].errors };\r\n  }\r\n\r\n  getIfOption(option, type) {\r\n    const o = this.optionsForm.controls;\r\n\r\n    if (type == 0) {\r\n      return (o[option].touched || this.submitted) && o[option].errors\r\n    }\r\n\r\n    else if (type == 1) {\r\n      return o[option].errors.required;\r\n    }\r\n  }\r\n\r\n  getNumCorrectOption() {\r\n    var o = this.optionsForm.controls;\r\n    var cont = 0;\r\n\r\n    this.options.forEach(\r\n      function (option) {\r\n        if (o[option + 'isCorrect'].value) {\r\n          cont++;\r\n        }\r\n      }\r\n    );\r\n\r\n    return cont;\r\n  }\r\n\r\n  closeAlert() {\r\n    this.isLastOption = false;\r\n    this.isAllOptionCorrect = false;\r\n    this.isLastOptionCorrect = false;\r\n  }\r\n\r\n}\r\n","export class OptionCodeBlock {\r\n    id: number;\r\n    icon: string;\r\n\r\n    constructor(id: number) {\r\n        this.id = id;\r\n    }\r\n}\r\n","import { Directive, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[app-question]'\r\n})\r\nexport class QuestionDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n\r\n}\r\n","module.exports = \".question {\\r\\n    margin-bottom: 10%;\\r\\n}\\r\\n\\r\\n.alert-response {\\r\\n    position: absolute;\\r\\n    top: -12px;\\r\\n    left: 20px;\\r\\n    right: 20px;\\r\\n    z-index: 999;\\r\\n}\"","module.exports = \"<div class=\\\"row h-100\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"center-block\\\">\\r\\n\\r\\n\\r\\n            <div *ngIf=\\\"isForVote\\\" class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\r\\n                Esta es una pregunta que todavia no ha sido aceptada, no contara para tu puntuación!\\r\\n            </div>\\r\\n\\r\\n            <div [ngSwitch]=\\\"alertType\\\" *ngIf=\\\"alertType\\\" class=\\\"alert-response\\\" style=\\\"height: 50%\\\">\\r\\n                <div *ngSwitchCase=\\\"'correct'\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n                    <h4 class=\\\"alert-heading\\\">Good</h4>\\r\\n                    <p>The answer is correct.</p>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngSwitchCase=\\\"'incorrect'\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n                    <h4 class=\\\"alert-heading\\\">Oh...</h4>\\r\\n                    <p>The answer is incorrect.</p>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"question\\\">\\r\\n                <ng-template app-question></ng-template>\\r\\n                <hr>\\r\\n                <button *ngIf=\\\"exitButton\\\" [routerLink]=\\\"['/competitive']\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-lg btn-block\\\">Exit</button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div #modalVote class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">¿Crees que esta es una buena pregunta?</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p>Vota aqui abajo.</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button (click)=\\\"voteQuestion(true)\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Si <span class=\\\"fas fa-thumbs-up\\\"></span></button>\\r\\n                <button (click)=\\\"voteQuestion(false)\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">No <span class=\\\"fas fa-thumbs-down\\\"></span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div #modalResponse class=\\\"modal\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h3 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">New info!</h3>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.newRank\\\" class=\\\"alert alert-success\\\">\\r\\n                    <h6>New RankLevel:</h6> {{newInfo.newRank.name}}\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.newExp >= 0\\\" class=\\\"alert alert-success\\\">\\r\\n                    <h6>Correct - Bonification:</h6> {{newInfo.newExp}} exp\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.newExp < 0\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <h6>Incorrect - Bonification:</h6> {{newInfo.newExp}} exp\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ComponentFactoryResolver, ChangeDetectorRef, AfterViewInit } from '@angular/core';\r\nimport { QuestionDirective } from './directives/question.directive';\r\nimport { CompetitiveService } from '../../services/competitive.services';\r\nimport { InfoUser } from 'src/app/shared/model/info-user.model';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'app-play-question',\r\n  templateUrl: './play-question.component.html',\r\n  styleUrls: ['./play-question.component.css']\r\n})\r\nexport class PlayQuestionComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(QuestionDirective) dQuestion: QuestionDirective;\r\n  @ViewChild('modalVote') modalVote;\r\n  @ViewChild('modalResponse') modalResponse;\r\n\r\n  cont = 0;\r\n  currentQuestion: any;\r\n\r\n  isForVote: boolean;\r\n  alertType = '';\r\n  exitButton: boolean;\r\n\r\n  newInfo: InfoUser = new InfoUser(undefined);\r\n\r\n  constructor(private service: CompetitiveService,\r\n    private cdr: ChangeDetectorRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver) { }\r\n\r\n  ngOnInit() {\r\n    this.getQuestion();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  getQuestion() {\r\n    this.service.getNextQuestion(this.cont).subscribe(\r\n      question => {\r\n        this.currentQuestion = question;\r\n        this.isForVote = this.currentQuestion.state === 'CREATED';\r\n        this.loadQuestion();\r\n      }\r\n    );\r\n  }\r\n\r\n  loadQuestion() {\r\n    const qDuo = this.service.getDuoQuestion(this.currentQuestion.question);\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(qDuo.component);\r\n    const viewContainerRef = this.dQuestion.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentRef = viewContainerRef.createComponent(componentFactory);\r\n    const componentInstance = <any>componentRef.instance;\r\n\r\n    componentInstance.data = qDuo.data;\r\n    componentInstance.responseQuestionEvent.subscribe(($event) => this.responseQuestion($event));\r\n    componentInstance.nextQuestionEvent.subscribe(($event) => this.nextQuestion($event));\r\n  }\r\n\r\n  responseQuestion(isCorrect: boolean) {\r\n    this.exitButton = true;\r\n    \r\n    if (this.currentQuestion.state !== 'ACCEPT') {\r\n      this.lauchAlertSimple(isCorrect);\r\n      return;\r\n    }\r\n\r\n    this.service.responseQuestion(this.currentQuestion.id, isCorrect).subscribe(\r\n      response => {\r\n        this.newInfo = new InfoUser(response);\r\n        jQuery(this.modalResponse.nativeElement).modal('show');\r\n      }\r\n    );\r\n  }\r\n\r\n  lauchAlertSimple(isCorrect: boolean) {\r\n    if (isCorrect) {\r\n      this.alertType = 'correct';\r\n    } else {\r\n      this.alertType = 'incorrect';\r\n    }\r\n  }\r\n\r\n  nextQuestion(isLast: boolean) {\r\n    if (this.isForVote) {\r\n      jQuery(this.modalVote.nativeElement).modal('show');\r\n    } else {\r\n      this.loadNextQuestion();\r\n    }\r\n  }\r\n\r\n  voteQuestion(vote: boolean) {\r\n    const voteObj = {\r\n      'idQuestion': this.currentQuestion.id,\r\n      'vote': vote\r\n    };\r\n    this.service.voteQuestion(voteObj).subscribe();\r\n\r\n    this.loadNextQuestion();\r\n  }\r\n\r\n  loadNextQuestion() {\r\n    this.cont++;\r\n    this.getQuestion();\r\n    this.loadQuestion();\r\n    this.alertType = null;\r\n    this.exitButton = false;\r\n    this.newInfo = new InfoUser(undefined);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { QuestionDuo } from '../../question/model/question-duo';\r\nimport { QuestionOptionsComponent } from '../../question/components/question-options/question-options.component';\r\nimport { QuestionCodeBlockComponent } from '../../question/components/question-code-block/question-code-block.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompetitiveService {\r\n  url: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.url = environment.baseUrl;\r\n  }\r\n\r\n  createNewQuestion(newQuestion: any) {\r\n    const customQuestion: any = {\r\n        'username': this.getCurrentUser(),\r\n        'question': newQuestion\r\n    };\r\n\r\n    return this.http.post<any>(`${this.url}/newQuestion`, customQuestion);\r\n  }\r\n\r\n  voteQuestion(vote: any) {\r\n    return this.http.post<any>(`${this.url}/voteQuestion`, vote);\r\n  }\r\n\r\n  responseQuestion(idQuestion: string, isCorrect: boolean) {\r\n    const responseQuestion: any = {\r\n      'username': this.getCurrentUser(),\r\n      'idQuestion': idQuestion,\r\n      'correct': isCorrect\r\n    };\r\n\r\n    return this.http.post<any>(`${this.url}/responseQuestion`, responseQuestion);\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('currentUser')).username;\r\n  }\r\n\r\n  getNextQuestion(cont: number) {\r\n    const username = this.getCurrentUser();\r\n    return this.http.get<any>(`${this.url}/nextQuestion?username=${username}&cont=${cont}`);\r\n  }\r\n\r\n  getDuoQuestion(question: any) {\r\n    let qDuo;\r\n        if (question.type === 'option') {\r\n          qDuo = new QuestionDuo(QuestionOptionsComponent, question);\r\n        } else if (question.type === 'codeBlock') {\r\n          qDuo = new QuestionDuo(QuestionCodeBlockComponent, question);\r\n        }\r\n\r\n        return qDuo;\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, ViewContainerRef} from '@angular/core';\n\n@Directive({\n  selector: '[app-question]'\n})\nexport class QuestionDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","module.exports = \".question {\\r\\n    margin-bottom: 10%;\\r\\n}\\r\\n\\r\\n.alerts {\\r\\n    position: absolute;\\r\\n    top: -12px;\\r\\n    left: 20px;\\r\\n    right: 20px;\\r\\n    z-index:999;\\r\\n  }\"","module.exports = \"<div class=\\\"row h-100\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"center-block\\\">\\r\\n\\r\\n            <div [ngSwitch]=\\\"alertType\\\" *ngIf=\\\"alertType\\\" class=\\\"alerts\\\" style=\\\"height: 50%\\\">\\r\\n                <div *ngSwitchCase=\\\"'correct'\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n                    <h4 class=\\\"alert-heading\\\">Good</h4>\\r\\n                    <p>The answer is correct.</p>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngSwitchCase=\\\"'incorrect'\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n                    <h4 class=\\\"alert-heading\\\">Oh...</h4>\\r\\n                    <p>The answer is incorrect.</p>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"progress\\\">\\r\\n                <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{'width':progressCorrect}\\\" aria-valuemax=\\\"100\\\">{{correctQuestion}}</div>\\r\\n                <div class=\\\"progress-bar bg-danger\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{'width':progressIncorrect}\\\" aria-valuemax=\\\"100\\\">{{incorrectQuestion}}</div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"question\\\">\\r\\n                <div class=\\\"mx-auto\\\" style=\\\"width: 90%\\\">\\r\\n                    <ng-template app-question></ng-template>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div #myModal class=\\\"modal\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h3 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">New info!</h3>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.newRank\\\" class=\\\"alert alert-success\\\">\\r\\n                    <h6>New RankLevel:</h6> {{newInfo.newRank.name}}\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.levelsUnlock.length > 0\\\" class=\\\"alert alert-warning\\\">\\r\\n                    <h6>Levels unlocked</h6>\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let level of newInfo.levelsUnlock\\\">{{level}}</li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.sectionsUnlock.length > 0\\\" class=\\\"alert alert-warning\\\">\\r\\n                    <h6>Sections unlocked</h6>\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let section of newInfo.sectionsUnlock\\\">{{section}}</li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.trophiesComplete.length > 0\\\" class=\\\"alert alert-secondary\\\">\\r\\n                    <h6>Trophies complete</h6>\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let result of newInfo.trophiesComplete\\\">{{result.challange.title}}</li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"newInfo.challangesComplete.length > 0\\\" class=\\\"alert alert-secondary\\\">\\r\\n                    <h6>Challanges complete</h6>\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let result of newInfo.challangesComplete\\\">{{result.challange.description}}</li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\">\\r\\n                    <h6>Bonification:</h6> {{newInfo.newExp}} exp\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)='backSections()'>Volver a la sección</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { QuestionDirective } from './directives/question.directive';\r\nimport { SectionsService } from '../../services/sections.service';\r\nimport { QuestionDuo } from '../../../question/model/question-duo';\r\nimport { Router } from '../../../../../node_modules/@angular/router';\r\nimport { InfoUser } from '../../../shared/model/info-user.model';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'app-level',\r\n  templateUrl: './level.component.html',\r\n  styleUrls: ['./level.component.css']\r\n})\r\nexport class LevelComponent implements AfterViewInit, OnInit {\r\n  @ViewChild('myModal') myModal;\r\n  @ViewChild(QuestionDirective) dQuestion: QuestionDirective;\r\n  index = 0;\r\n  qDuos: QuestionDuo[];\r\n  alertType: string = null;\r\n\r\n  questions: number;\r\n  correctQuestion = 0;\r\n  incorrectQuestion = 0;\r\n  progressCorrect = '0%';\r\n  progressIncorrect = '0%';\r\n\r\n  newInfo: InfoUser = new InfoUser(undefined);\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n    private cdr: ChangeDetectorRef,\r\n    private sectionService: SectionsService,\r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadLevel();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadQuestion();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  loadLevel() {\r\n    this.qDuos = this.sectionService.getQuestionsDuo();\r\n    this.questions = this.qDuos.length;\r\n  }\r\n\r\n  loadQuestion() {\r\n    const qDuo = this.qDuos[this.index];\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(qDuo.component);\r\n    const viewContainerRef = this.dQuestion.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentRef = viewContainerRef.createComponent(componentFactory);\r\n    const componentInstance = <any>componentRef.instance;\r\n    \r\n    componentInstance.data = qDuo.data;\r\n    componentInstance.responseQuestionEvent.subscribe(($event) => this.responseQuestion($event));\r\n    componentInstance.nextQuestionEvent.subscribe(($event) => this.nextQuestion($event));\r\n  }\r\n\r\n  responseQuestion(isCorrect: boolean) {\r\n    if (isCorrect) {\r\n      this.correctQuestion++;\r\n      this.alertType = 'correct';\r\n      const percentajeCorrect = (this.correctQuestion / this.questions) * 100;\r\n      this.progressCorrect = percentajeCorrect.toString() + '%';\r\n    } else {\r\n      this.incorrectQuestion++;\r\n      this.alertType = 'incorrect';\r\n\r\n      const percentajeIncorrect = (this.incorrectQuestion / this.questions) * 100;\r\n      this.progressIncorrect = percentajeIncorrect.toString() + '%';\r\n    }\r\n  }\r\n\r\n  nextQuestion(isLast: boolean) {\r\n    if (isLast) {\r\n      this.sectionService.responseLevel(this.correctQuestion, this.incorrectQuestion)\r\n        .subscribe((data) => {\r\n          this.newInfo = data;\r\n          jQuery(this.myModal.nativeElement).modal('show');\r\n        }\r\n      );\r\n    } else {\r\n      this.index++;\r\n      this.alertType = null;\r\n      this.loadQuestion();\r\n    }\r\n  }\r\n\r\n  backSections() {\r\n    const codSection = this.sectionService.getCurrentLevel().codSection;\r\n    this.router.navigate(['/section', codSection]);\r\n    jQuery(this.myModal.nativeElement).modal('hide');\r\n  }\r\n\r\n}\r\n","module.exports = \".jumbotron {\\r\\n    padding: 20px;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1 class=\\\"display-6\\\">{{section.title}}</h1>\\r\\n    <hr class=\\\"my-4\\\">\\r\\n    <p class=\\\"lead\\\">Antes de comenzar a jugar, lee la documentación de la sección!</p>\\r\\n    <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"button\\\" style=\\\"margin: 4px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#docModal\\\">Learn\\r\\n        more</button>\\r\\n    <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n        Challanges\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n        <div class=\\\"card\\\" style=\\\"margin-top: 4px\\\">\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n                <li [class]=\\\"getClass(i)\\\" *ngFor=\\\"let challange of section.challanges; let i = index;\\\">\\r\\n                    {{ getChallangeDescription(i)}}\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-lg\\\">\\r\\n        <h2>Main Levels</h2>\\r\\n        <hr>\\r\\n\\r\\n        <app-level-card [level]=\\\"level\\\" *ngFor=\\\"let level of levelsMain\\\"></app-level-card>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg\\\">\\r\\n        <h2>Optional Levels</h2>\\r\\n        <hr>\\r\\n\\r\\n        <app-level-card [level]=\\\"level\\\" *ngFor=\\\"let level of levelsOptional\\\"></app-level-card>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<div id=\\\"docModal\\\" class=\\\"modal fade bd-example-modal-lg\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <app-formatted-text [data]=\\\"section.documentation\\\"></app-formatted-text>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, AfterViewInit, AfterContentInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SectionsService } from '../../services/sections.service';\r\n\r\nimport { Section } from '../../model/section.model';\r\nimport { Level } from '../../model/level.model';\r\nimport { FormattedTextComponent } from '../../../shared/components/formatted-text/formatted-text.component';\r\n\r\n@Component({\r\n  selector: 'app-section',\r\n  templateUrl: './section.component.html',\r\n  styleUrls: ['./section.component.css']\r\n})\r\nexport class SectionComponent implements OnInit {\r\n  @ViewChild(FormattedTextComponent) text;\r\n  codSection: string;\r\n  section: Section = new Section();\r\n  levelsMain: Level[];\r\n  levelsOptional: Level[];\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n    private sectionsService: SectionsService,\r\n    private router: Router) {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.codSection = params['cod'];\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadLevels();\r\n  }\r\n\r\n  loadLevels() {\r\n    this.sectionsService.getSection(this.codSection)\r\n      .subscribe(\r\n      data => {\r\n        this.section = data;\r\n        this.levelsMain = data.levels.filter(level => level.main).sort((a, b) => a.name.localeCompare(b.name));\r\n        this.levelsOptional = data.levels.filter(level => !level.main).sort((a, b) => a.name.localeCompare(b.name));\r\n      }, \r\n      error => {\r\n        this.router.navigate( ['/sections'] );\r\n      }\r\n      );\r\n  }\r\n\r\n  getChallangeDescription(i: number) {\r\n    return this.section.challanges[i].challange.description;\r\n  }\r\n\r\n  getClass(i: number) {\r\n    const base = 'list-group-item';\r\n\r\n    return this.section.challanges[i].complete ?\r\n      base + ' list-group-item-success' :\r\n      base;\r\n  }\r\n\r\n}\r\n","module.exports = \"@media only screen and (max-width:991px) and (min-width:574px) {\\r\\n    .card-columns {\\r\\n        -webkit-column-count: 2;\\r\\n                column-count: 2;\\r\\n    }\\r\\n}\"","module.exports = \"<h1>Sections</h1>\\n<hr>\\n\\n\\n<div class=\\\"card-columns\\\">\\n\\n  <app-section-card [section]=\\\"section\\\" *ngFor=\\\"let section of sections\\\"></app-section-card>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SectionsService } from '../../services/sections.service';\r\nimport { Section } from '../../model/section.model';\r\n\r\n@Component({\r\n  selector: 'app-sections',\r\n  templateUrl: './sections.component.html',\r\n  styleUrls: ['./sections.component.css']\r\n})\r\nexport class SectionsComponent implements OnInit {\r\n  sections: Section[];\r\n\r\n  constructor(private sectionsService: SectionsService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadSections();\r\n  }\r\n\r\n  loadSections() {\r\n    this.sectionsService.getSectionsList().subscribe(\r\n      data => {\r\n        this.sections = data;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { routing } from './history.routing';\r\n\r\nimport { SectionsComponent } from './components/sections/sections.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SectionComponent } from './components/section/section.component';\r\nimport { LevelComponent } from './components/level/level.component';\r\nimport { QuestionModule } from '../question/question.module';\r\nimport { QuestionDirective } from './components/level/directives/question.directive';\r\nimport { LevelGuard } from './services/level.guard';\r\nimport { SectionsService } from './services/sections.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    routing,\r\n    SharedModule,\r\n    QuestionModule\r\n  ],\r\n  declarations: [\r\n    SectionsComponent,\r\n    SectionComponent,\r\n    LevelComponent,\r\n    QuestionDirective\r\n  ], providers: [\r\n    LevelGuard,\r\n    SectionsService\r\n  ]\r\n})\r\nexport class HistoryModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { SectionsComponent } from './components/sections/sections.component';\r\nimport { AuthGuard } from '../login/services/auth.guard';\r\nimport { SectionComponent } from './components/section/section.component';\r\nimport { LevelComponent } from './components/level/level.component';\r\nimport { LevelGuard } from './services/level.guard';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'sections', component: SectionsComponent, canActivate: [AuthGuard]  },\r\n    { path: 'section/:cod', component: SectionComponent, canActivate: [AuthGuard] },\r\n    { path: 'level/:cod', component: LevelComponent, canActivate: [LevelGuard] }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(appRoutes);\r\n","export class Level {\r\n    id: string;\r\n    idSection: number;\r\n    codSection: number;\r\n    name: string;\r\n    orden: number;\r\n    main: boolean;\r\n    unlocked: boolean;\r\n    complete: boolean;\r\n    numAttemps: boolean;\r\n    numCorrectQuestion: number;\r\n    numIncorrectQuestion: number;\r\n    nextLevels: string[];\r\n    questions: any[];\r\n    experience: number;\r\n}\r\n","import { Level } from './level.model';\r\nimport { Challange } from './challange.model';\r\n\r\nexport class Section {\r\n    id: string;\r\n    orden: number;\r\n    documentation: any;\r\n    title: string;\r\n    description: string;\r\n    unlocked: boolean;\r\n    completeAll: boolean;\r\n    levels: Level[];\r\n    nextSections: string[];\r\n    challanges: Challange[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { SectionsService } from './sections.service';\r\n\r\n@Injectable()\r\nexport class LevelGuard implements CanActivate {\r\n \r\n    constructor(private router: Router, private sectionsService: SectionsService) { }\r\n \r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.sectionsService.currentLevel) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        let codSection = state.url.split(\"/\")[2].split(\"_\")[0];\r\n        this.router.navigate( ['/section', codSection] );\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Section } from '../model/section.model';\r\nimport { Level } from '../model/level.model';\r\nimport { QuestionDuo } from '../../question/model/question-duo';\r\nimport { QuestionOptionsComponent } from '../../question/components/question-options/question-options.component';\r\nimport { QuestionCodeBlockComponent } from '../../question/components/question-code-block/question-code-block.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SectionsService {\r\n\r\n  url: string;\r\n  currentLevel: Level;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.url = environment.baseUrl;\r\n  }\r\n\r\n  getSectionsList() {\r\n    return this.http.get<Section[]>(`${this.url}/sections?username=${this.getCurrentUser()}`);\r\n  }\r\n\r\n  getSection(cod: string) {\r\n    return this.http.get<Section>(`${this.url}/section/${cod}?username=${this.getCurrentUser()}`);\r\n  }\r\n\r\n  responseLevel(correctQuestion: number, incorrectQuestion: number) {\r\n    const resultLevel = {\r\n      'username': this.getCurrentUser(),\r\n      'idLevel': this.getCurrentLevel().id,\r\n      'idSection': this.getCurrentLevel().idSection,\r\n      'numCorrectQuestion': correctQuestion,\r\n      'numIncorrectQuestion': incorrectQuestion,\r\n      'nextLevels': this.getCurrentLevel().nextLevels,\r\n      'expBase': this.getCurrentLevel().experience\r\n    };\r\n\r\n    return this.http.post<any>(`${this.url}/responseLevel`, resultLevel);\r\n  }\r\n\r\n  getQuestionsDuo() {\r\n    const qDuos: QuestionDuo[] = [];\r\n\r\n    let cont = 0;\r\n    for (const question of this.currentLevel.questions.sort((a, b) => a.title.localeCompare(b.title))) {\r\n      question.isLast = cont === this.currentLevel.questions.length - 1;\r\n      let qDuo: QuestionDuo;\r\n      if (question.type === 'option') {\r\n        qDuo = new QuestionDuo(QuestionOptionsComponent, question);\r\n      } else if (question.type === 'codeBlock') {\r\n        qDuo = new QuestionDuo(QuestionCodeBlockComponent, question);\r\n      }\r\n      qDuos.push(qDuo);\r\n      cont++;\r\n    }\r\n\r\n    return qDuos;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('currentUser')).username;\r\n  }\r\n\r\n  setCurrentLevel(level: Level) {\r\n    this.currentLevel = level;\r\n  }\r\n\r\n  getCurrentLevel() {\r\n    return this.currentLevel;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n\n  constructor(private http: HttpClient) { \n    \n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"@media only screen and (min-width:767px) {\\r\\n\\r\\n    .container {\\r\\n        width: 50%;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n@media only screen and (max-width:766px) {\\r\\n\\r\\n    .container {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    h1 {\\r\\n        class: display-5;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div *ngIf=\\\"loginFailed\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\n    <h4 class=\\\"alert-heading\\\">Oh no!</h4>\\n    <p>Username/Password not correct. Prueba de nuevo.</p>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\\n\\n<div class=\\\"container\\\" style=\\\"margin-top: 35px;\\\">\\n    <div class=\\\"text-center\\\">\\n        <div class=\\\"col-lg-12\\\">\\n\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <img class=\\\"mb-4\\\" src=\\\"assets/trophy.svg\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\n                    <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Please sign in</h1>\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Enter username\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter password\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Login</button>\\n                </div>\\n                <a href=\\\"\\\" text-decoration=\\\"underline\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\"><u>Register\\n                        here now.</u></a>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n<div #myModal class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\"\\n    aria-hidden=\\\"true\\\">\\n    <app-register (close)=\\\"onClose($event)\\\"></app-register>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service'\nimport { first } from 'rxjs/operators';\nimport { ExceptionService } from '../../../shared/services/exception.service';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @ViewChild('myModal') myModal: ElementRef;\n\n  loginForm: FormGroup;\n  loading = false;\n  loginFailed = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private exceptionService: ExceptionService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.authenticationService.logout();\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.loginFailed = false;\n    this.submitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\n    .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                  if (error.status == 400) {\n                    this.loginFailed = true;\n                  } \n\n                  this.loading = false;\n                });\n  }\n\n  onClose() {\n    jQuery(this.myModal.nativeElement).modal('hide');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h5 class=\\\"modal-title\\\" id=\\\"exampleModalCenterTitle\\\">Register now free!</h5>\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"modal-body\\\">\\n      <form [formGroup]=\\\"registerForm\\\">\\n\\n        <label for=\\\"exampleInputPassword1\\\">Username</label>\\n\\n        <div class=\\\"input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">@</span>\\n          </div>\\n          <input #username (blur)=\\\"checkUniqueUsername(username.value)\\\" (keyup)=\\\"checkUniqueUsername(username.value)\\\" type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" aria-label=\\\"Username\\\"\\n            aria-describedby=\\\"basic-addon1\\\" [ngClass]=\\\"{ 'is-invalid': (f.username.touched || submitted ) && f.username.errors }\\\">\\n          <div *ngIf=\\\"(f.username.touched || submitted ) && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">El nombre de usuario es obligatorio.</div>\\n            <div *ngIf=\\\"f.username.errors.minlength\\\">Mínimo 4 caracteres</div>\\n            <div *ngIf=\\\"f.username.errors.maxlength\\\">Máximo 16 caracteres</div>\\n            <div *ngIf=\\\"f.username.errors.repeat\\\">Nombre de usuario repetido</div>\\n          </div>\\n        </div>\\n\\n\\n        <label for=\\\"exampleInputPassword1\\\">Mail</label>\\n\\n        <div class=\\\"input-group mb-3\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"mail\\\" class=\\\"form-control\\\" placeholder=\\\"Mail\\\" aria-describedby=\\\"basic-addon2\\\"\\n            [ngClass]=\\\"{ 'is-invalid': (f.mail.touched || submitted ) && f.mail.errors }\\\">\\n          <div *ngIf=\\\"(f.mail.touched || submitted ) && f.mail.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.mail.errors.required\\\">Mail is required</div>\\n            <div *ngIf=\\\"f.mail.errors.email\\\">Mail format incorrect (example: demo@prueba.com)</div>\\n          </div>\\n        </div>\\n\\n        <form formGroupName=\\\"passwords\\\">\\n          <label for=\\\"exampleInputPassword1\\\">Password</label>\\n\\n          <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\"\\n            [ngClass]=\\\"{ 'is-invalid': (f.passwords.touched || submitted ) && f.passwords.errors }\\\">\\n\\n          <input type=\\\"password\\\" formControlName=\\\"password2\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword2\\\"\\n            placeholder=\\\"Repeat Password\\\" [ngClass]=\\\"{ 'is-invalid': (f.passwords.touched || submitted ) && f.passwords.errors }\\\">\\n\\n          <div *ngIf=\\\"(f.passwords.touched || submitted ) && f.passwords.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.passwords.errors.passFormat; else second\\\">Password format</div>\\n            <ng-template #second>\\n              <div *ngIf=\\\"f.passwords.errors.mismatch\\\">Password coincidir</div>\\n            </ng-template>\\n          </div>\\n\\n        </form>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"register()\\\">Register</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../services/authentication.service'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() close: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('username') usernameInput: ElementRef;\n\n  registerForm: FormGroup;\n  passwordsForm: FormGroup;\n  submitted: boolean;\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]],\n      mail: ['', [Validators.required, Validators.email]],\n\n      passwords: this.formBuilder.group({\n        password: ['', []],\n        password2: ['', []],\n      }, { validator: [this.passwordConfirmed, this.passFormat] })\n\n    });\n  }\n\n  checkUniqueUsername(value: string) {\n    if (this.f.username.errors || !this.f.username.touched) {\n        return;\n    }\n\n    this.authenticationService.isUniqueUsername(value).subscribe(\n      data => {\n        if (!data) {\n          this.f.username.setErrors({repeat: true});\n        }\n      },\n      error => {\n        this.router.navigate(['/login']);\n        this.close.emit();\n      }\n    )\n  }\n\n  passwordConfirmed(c: AbstractControl): { mismatch: boolean } {\n    if (c.get('password').value !== c.get('password2').value) {\n      return { mismatch: true };\n    }\n  }\n\n  passFormat(c: AbstractControl): { passFormat: boolean } {\n    let length = c.get('password').value.length;\n    if (length < 4 || length > 6)\n      return { passFormat: true };\n  }\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  register() {\n    const me = this;\n    this.submitted = true;\n\n    if (this.registerForm.invalid)\n      return;\n\n\n    const newUser = {\n      username: this.f.username.value,\n      password: this.f.passwords.get('password').value,\n      mail: this.f.mail.value\n    };\n\n    this.authenticationService.register(newUser).subscribe(data => {\n      me.authenticationService.login(data.username, data.password).subscribe(data => {\n        me.router.navigate(['/home'])\n        me.close.emit();\n      },\n      error => {\n        this.router.navigate(['/login'])\n      }\n      );\n    }\n    );\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from './services/auth.guard';\nimport { AuthenticationService } from './services/authentication.service';\nimport { routing } from './login.routing';\n\n@NgModule({\n  imports: [\n    routing,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  declarations: [\n    RegisterComponent,\n    LoginComponent\n  ], providers: [\n    AuthGuard,\n    AuthenticationService\n  ]\n})\nexport class LoginModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'profile', component: LoginComponent  }\r\n];\r\n \r\nexport const routing = RouterModule.forChild(appRoutes);","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n \r\n    constructor(private router: Router) { }\r\n \r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n \r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  url: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n      this.url = environment.baseUrl;\r\n  }\r\n\r\n  login(username: string, password: string) {\r\n    return this.http\r\n      .post<any>(`${this.url}/login`, {\r\n        username: username,\r\n        password: password\r\n      })\r\n      .pipe(\r\n        map(user => {\r\n          // login successful if there's a jwt token in the response\r\n          if (user && user.token) {\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n          }\r\n\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isUniqueUsername(user: string) {\r\n    return this.http.get<any>(`${this.url}/uniqueUsername?username=${ user }`);\r\n  }\r\n\r\n  register(newUser: any) {\r\n    return this.http.post<any>(`${this.url}/register`, newUser);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, EMPTY, throwError} from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ExceptionService } from '../../shared/services/exception.service';\r\n \r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private exceptionService: ExceptionService) {\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        let me = this;\r\n        \r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n \r\n        return next.handle(request).pipe(\r\n            catchError( err => {\r\n                    this.exceptionService.sendException(err.status);\r\n                    return throwError(err);\r\n            })\r\n        );\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"card text-center bg-light mb-3\\\" style=\\\"width: 100%\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <h2 class=\\\"display-5\\\">My Questions</h2>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\"></th>\\r\\n                    <th scope=\\\"col\\\">Title</th>\\r\\n                    <th scope=\\\"col\\\">State</th>\\r\\n                    <th scope=\\\"col\\\">Info</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let question of questions; let i = index\\\">\\r\\n                    <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                    <td>{{question.question.title}}</td>\\r\\n                    <td>{{question.state}}</td>\\r\\n                    <td>@mdo</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-custom-questions',\r\n  templateUrl: './custom-questions.component.html',\r\n  styleUrls: ['./custom-questions.component.css']\r\n})\r\nexport class CustomQuestionsComponent implements OnInit {\r\n  questions = [];\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadQuestions();\r\n  }\r\n\r\n  loadQuestions() {\r\n    this.userService.getQuestionByUser().subscribe(\r\n      questions => {\r\n        this.questions = questions;\r\n      },\r\n      error => {\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"@media screen and (max-width: 991px) {\\r\\n    .card-columns {\\r\\n        -webkit-column-count: 1;\\r\\n                column-count: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 992px) {\\r\\n    .card-columns {\\r\\n        -webkit-column-count: 2;\\r\\n                column-count: 2;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 768px) {\\r\\n    h2{\\r\\n        font-size:54px;\\r\\n    }\\r\\n\\r\\n    h1 {\\r\\n        font-size: 65px;\\r\\n    }\\r\\n}\"","module.exports = \"<div class=\\\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-transparent\\\">\\r\\n    <div class=\\\"col-md-6 p-lg-2 mx-auto my-1\\\">\\r\\n        <img src=\\\"assets/descarga.jpg\\\" class=\\\"rounded-circle\\\" alt=\\\"Cinque Terre\\\" width=\\\"152\\\" height=\\\"118\\\">\\r\\n        <h1 class=\\\"display-4 font-weight-normal\\\">@{{user.username}}</h1>\\r\\n        <hr>\\r\\n        <p class=\\\"lead font-weight-normal\\\"><strong>Name: </strong>{{user.username}}</p>\\r\\n        <p class=\\\"lead font-weight-normal\\\"><strong>Mail: </strong>{{user.mail}}</p>\\r\\n        <a class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/login']\\\" style=\\\"margin: 5px\\\">Close session</a>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card-columns\\\">\\r\\n\\r\\n    <app-rank-level [levelRank]=\\\"levelRank\\\"></app-rank-level>\\r\\n\\r\\n    <app-trophies [trophies]=\\\"trophies\\\"></app-trophies>\\r\\n\\r\\n    <app-custom-questions> </app-custom-questions>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: any = {};\r\n  levelRank: any = {};\r\n  trophies: any[] = [];\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadProfile();\r\n  }\r\n\r\n  loadProfile() {\r\n    this.userService.getUser().subscribe(\r\n      data => {\r\n        this.user = data;\r\n        this.levelRank = data.levelRank;\r\n        this.trophies = data.resultTrophies;\r\n\r\n        this.levelRank.userExperience = this.user.experience;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card text-center text-white bg-dark mb-3\\\" style=\\\"width: 100%\\\">\\n  <div class=\\\"card-header\\\">\\n      <h2 class=\\\"display-5\\\">Level Rank</h2>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n      <img src=\\\"assets/noob.svg\\\" class=\\\"rounded-circle\\\" alt=\\\"Cinque Terre\\\" width=\\\"304\\\" height=\\\"226\\\">\\n      <h2 class=\\\"display-3\\\">{{levelRank.name}}</h2>\\n      <hr>\\n      <h1 class=\\\"display-2\\\">{{levelRank.userExperience}} exp</h1>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-rank-level',\n  templateUrl: './rank-level.component.html',\n  styleUrls: ['./rank-level.component.css']\n})\nexport class RankLevelComponent implements OnInit {\n  \n  @Input()\n  levelRank: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { routing } from './profile.routing'\r\n\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { RankLevelComponent } from './components/rank-level/rank-level.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CustomQuestionsComponent } from './components/custom-questions/custom-questions.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    routing,\r\n    CommonModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [ProfileComponent, RankLevelComponent, CustomQuestionsComponent]\r\n})\r\nexport class ProfileModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '../login/services/auth.guard';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]  }\r\n];\r\n \r\nexport const routing = RouterModule.forChild(appRoutes);","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    url: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.url = environment.baseUrl;\r\n    }\r\n\r\n    getUser() {\r\n        return this.http.get<any>(`${this.url}/user?username=${ this.getCurrentUser() }`);\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('currentUser')).username;\r\n    }\r\n\r\n    getQuestionByUser() {\r\n        return this.http.get<any>(`${this.url}/questionsByUser?username=${ this.getCurrentUser()}`);\r\n    }\r\n\r\n}","module.exports = \".card {\\r\\n    margin-bottom: 2%;\\r\\n    margin-top: 2%;\\r\\n}\\r\\n\\r\\n.option {\\r\\n    margin: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{data.title}}</h5>\\n    <app-formatted-text [data]=\\\"data.statement\\\"></app-formatted-text>\\n  </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n\\n    <h6 class=\\\"card-title\\\">Response</h6>\\n    <div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"removeBlock(block.cod)\\\" *ngFor=\\\"let block of blocksResponse;\\\">{{block.value}}</button>\\n    </div>\\n\\n    <hr>\\n\\n    <h6 class=\\\"card-title\\\">Options</h6>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"option\\\" *ngFor=\\\"let block of blocksOptions; let i = index\\\">\\n        <button type=\\\"button\\\" (click)=\\\"addBlock(block.cod)\\\" class=\\\"btn btn-secondary\\\">{{block.value}}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" (click)=\\\"qualify()\\\">{{nameButton}}</button>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-question-code-block',\n  templateUrl: './question-code-block.component.html',\n  styleUrls: ['./question-code-block.component.css']\n})\nexport class QuestionCodeBlockComponent implements OnInit {\n\n  @Input() data: any;\n  @Output() responseQuestionEvent: EventEmitter<boolean>;\n  @Output() nextQuestionEvent: EventEmitter<boolean>;\n\n  isResponse:boolean = false;\n\n  blocksOptions: any[] = [];\n  blocksResponse: any[] = [];\n\n  nameButton: string = \"Qualify\";\n\n  constructor() {\n    this.responseQuestionEvent = new EventEmitter();\n    this.nextQuestionEvent = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    let cont = 0;\n    for (let codeBlock of this.data.codeBlocksOptions) {\n      let codeObj = {\n        \"cod\": cont,\n        \"value\": codeBlock\n      }\n\n      this.blocksOptions.push(codeObj);\n      cont++;\n    }\n    this.blocksResponse = [];\n  }\n\n  qualify() {\n    let isCorrect = false;\n\n    if (this.isResponse) {\n      this.nextQuestion();\n      return;\n    }\n\n    if (this.blocksResponse.length == this.data.codeBlocksCorrect.length) {\n      isCorrect = this.compareResponse();\n    }\n    \n    this.responseQuestionEvent.emit(isCorrect);\n    this.isResponse = true;\n    this.nameButton = this.data.isLast ? \"Finalize\" : \"Next question\";\n  }\n\n  nextQuestion() {\n    this.nextQuestionEvent.emit(this.data.isLast);\n  }\n\n  compareResponse():boolean {\n    let i = 0;\n    for (let block of this.blocksResponse) {\n      if (block.value != this.data.codeBlocksCorrect[i]) {\n        return false;\n      }\n\n      i++;\n    }\n\n    return true;\n  }\n\n  getNameOption(i: number) {\n    this.blocksOptions[i];\n  }\n\n  addBlock(cod: number) {\n    let cont = 0;\n    for (let block of this.blocksOptions) {\n      if (block.cod == cod) {\n        this.blocksResponse.push(block);\n        this.blocksOptions.splice(cont, 1);\n      }\n\n      cont++;\n    }\n  }\n\n  removeBlock(cod: number) {\n    let cont = 0;\n    for (let block of this.blocksResponse) {\n      if (block.cod == cod) {\n        this.blocksResponse.splice(cont, 1);\n        this.blocksOptions.push(block);\n      }\n\n      cont++;\n    }\n  }\n\n}\n","module.exports = \".list-group {\\r\\n    margin-bottom: 2%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    margin-bottom: 5%;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    margin-top: 5%;\\r\\n    margin-bottom: 5%;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">{{data.title}}</h5>\\r\\n                <app-formatted-text [data]=\\\"data.statement\\\"></app-formatted-text>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-muted text-center\\\">\\r\\n                Respuestas correctas {{cont}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <ul class=\\\"list-group\\\">\\r\\n            <li [class]=\\\"options[i].classOption\\\" (click)=\\\"response(i)\\\" *ngFor=\\\"let option of options; let i = index;\\\">{{getOption(i)}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" (click)=\\\"qualify()\\\">{{nameButton}}</button>\"","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-question-options',\n  templateUrl: './question-options.component.html',\n  styleUrls: ['./question-options.component.css']\n})\nexport class QuestionOptionsComponent implements OnInit{\n  OPTION_CLASS: string = \"list-group-item list-group-item-action\";\n  OPTION_CLASS_ACTIVE: string = \"list-group-item list-group-item-action active\";\n\n  OPTION_CLASS_CORRECT: string = \"list-group-item list-group-item-action list-group-item-success\";\n  OPTION_CLASS_INCORRECT: string = \"list-group-item list-group-item-action list-group-item-danger\";\n\n  @Input() data: any;\n  @Output() responseQuestionEvent: EventEmitter<boolean>;\n  @Output() nextQuestionEvent: EventEmitter<boolean>;\n\n  cont: number = 0;\n  optionsSelected: number = 0;\n  options: any[] = [];\n  isResponse: boolean = false;\n  nameButton: string = \"Qualify\";\n\n  constructor() {\n    this.responseQuestionEvent = new EventEmitter();\n    this.nextQuestionEvent = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.loadOptionsClass();\n  }\n\n  loadOptionsClass() {\n    for (let option of this.data.options) {\n      if (option.correct)\n        this.cont++;\n\n      let optionObj = {\n        \"value\": option.value,\n        \"classOption\": this.OPTION_CLASS,\n        \"selected\": false,\n        \"correct\": option.correct\n      }\n\n      this.options.push(optionObj);\n    }\n  }\n\n  response(index: number) {\n    if (this.isResponse)\n      return;\n\n    let optionObj = this.options[index];\n\n    if (this.cont == 1) {\n      this.clearAllOptions();\n    }\n\n    if (optionObj.selected) {\n      optionObj.classOption = this.OPTION_CLASS;\n      optionObj.selected = false;\n      this.optionsSelected--;\n    } else if (this.optionsSelected != this.cont) {\n      optionObj.classOption = this.OPTION_CLASS_ACTIVE;\n      optionObj.selected = true;\n      this.optionsSelected++;\n    }\n\n  }\n\n  clearAllOptions() {\n    for (let option of this.options) {\n      option.classOption = this.OPTION_CLASS;\n      option.selected = false;\n      this.optionsSelected = 0;\n    }\n  }\n\n  getOption(index: number) {\n    return this.data.options[index].value;\n  }\n\n  qualify() {\n\n    if (this.isResponse) {\n      this.nextQuestion();\n      return;\n    }\n\n    let isCorrect = true;\n    for (let option of this.options) {\n      if (option.correct != option.selected) {\n        isCorrect = false;\n        break;\n      }\n    }\n\n    this.responseQuestionEvent.emit(isCorrect);\n    this.markQuestion(isCorrect);\n    this.isResponse = true;\n\n    this.nameButton = this.data.isLast ? \"Finalize\" : \"Next question\";\n  }\n\n  nextQuestion() {\n    this.nextQuestionEvent.emit(this.data.isLast);\n  }\n\n  markQuestion(isCorrect: boolean) {\n    for (let option of this.options) {\n      if (option.correct)\n        option.classOption = isCorrect ? this.OPTION_CLASS_CORRECT : this.OPTION_CLASS_INCORRECT;\n    }\n  }\n\n}\n","import { Type } from '@angular/core';\r\n\r\nexport class QuestionDuo {\r\n    constructor(public component: Type<any>, public data: any) {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuestionOptionsComponent } from './components/question-options/question-options.component';\nimport { QuestionCodeBlockComponent } from './components/question-code-block/question-code-block.component';\nimport { HighlightJsModule } from 'ngx-highlight-js';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HighlightJsModule,\n    FormsModule,\n    SharedModule\n  ],\n  declarations: [QuestionOptionsComponent, QuestionCodeBlockComponent],\n  entryComponents: [QuestionOptionsComponent, QuestionCodeBlockComponent],\n  exports: [QuestionOptionsComponent, QuestionCodeBlockComponent]\n})\nexport class QuestionModule { }\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"data\\\">\\n    <div *ngFor=\\\"let block of data.blocks\\\">\\n        <div [ngSwitch]=\\\"block.type\\\" class=\\\"alert-response\\\" style=\\\"height: 50%\\\">\\n            <div *ngSwitchCase=\\\"'header'\\\">\\n                <div [ngSwitch]=\\\"block.level\\\">\\n                    <h1 *ngSwitchCase=\\\"1\\\">{{block.content}}</h1>\\n                    <h2 *ngSwitchCase=\\\"2\\\">{{block.content}}</h2>\\n                    <h3 *ngSwitchCase=\\\"3\\\">{{block.content}}</h3>\\n                </div>\\n            </div>\\n            <p *ngSwitchCase=\\\"'textSection'\\\" class=\\\"card-text\\\">{{block.content}}</p>\\n            <textarea *ngSwitchCase=\\\"'codeSection'\\\" highlight-js [lang]=\\\"block.programmingLanguage\\\" [ngModel]=\\\"block.content\\\"></textarea>\\n            <hr *ngSwitchCase=\\\"'separator'\\\">\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-formatted-text',\n  templateUrl: './formatted-text.component.html',\n  styleUrls: ['./formatted-text.component.css']\n})\nexport class FormattedTextComponent implements OnInit {\n\n  @Input() data: any;\n\n  constructor() {\n   \n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card border-primary mb-3\\\" [ngStyle]=\\\"{'opacity':opacity}\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <h5 class=\\\"card-title\\\">\\r\\n                    {{level.name}}\\r\\n                    <span [class]=\\\"classBadge\\\">{{msgBadge}}</span>\\r\\n                </h5>\\r\\n                <p class=\\\"card-text\\\">{{level.experience}} exp</p>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"width: 25%\\\" (click)=\\\"playLevel()\\\" [disabled]=\\\"disabledButton\\\">Play</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Level } from '../../../history/model/level.model';\r\nimport { Router } from '@angular/router';\r\nimport {SectionsService } from '../../../history/services/sections.service'\r\n\r\n@Component({\r\n  selector: 'app-level-card',\r\n  templateUrl: './level-card.component.html',\r\n  styleUrls: ['./level-card.component.css']\r\n})\r\nexport class LevelCardComponent implements OnInit {\r\n  NAME_BADGE: string = \"badge badge-\"; \r\n\r\n  @Input() level: Level = new Level();\r\n\r\n  classBadge: string;\r\n  msgBadge: string;\r\n  opacity: number = 1;\r\n  disabledButton:boolean;\r\n\r\n  constructor(private router: Router, private sectionsService: SectionsService) { }\r\n\r\n  ngOnInit() {\r\n    this.createBadge();\r\n  }\r\n\r\n  playLevel() {\r\n    this.sectionsService.setCurrentLevel(this.level);\r\n    this.router.navigate( ['/level', this.level.orden] );\r\n  }\r\n\r\n  createBadge() {\r\n    if (!this.level.unlocked) {\r\n        this.classBadge = this.NAME_BADGE+\"danger\";\r\n        this.msgBadge = \"Lock\";\r\n        this.opacity = 0.5;\r\n        this.disabledButton = true;\r\n    } else if (this.level.complete) {\r\n        this.classBadge = this.NAME_BADGE+\"success\";\r\n        this.msgBadge = \"Complete\"\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n        <img src=\\\"assets/trophy.svg\\\" width=\\\"30\\\" height=\\\"30\\\" alt=\\\"\\\">\\r\\n    </a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n        aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div #navbar class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"goComponent('/home')\\\" i18n=\\\"navbar.li.HOME\\\">Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"goComponent('/sections')\\\" i18n=\\\"navbar.li.SECTIONS\\\">History mode</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"goComponent('/competitive')\\\" i18n=\\\"navbar.li.SECTIONS\\\">Competitive mode</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item dropdown\\\">\\r\\n                <a class=\\\"nav-link dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\r\\n                    aria-expanded=\\\"false\\\">Mi cuenta</a>\\r\\n                <div class=\\\"dropdown-menu\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"goComponent('/profile')\\\" i18n=\\\"navbar.li.SECTIONS\\\">Perfil</a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"goComponent('/login')\\\" style=\\\"margin: 5px\\\">Cerrar sesión</a>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @ViewChild('navbar') navBar;\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goComponent(component: string) {\r\n    this.router.navigate( [component] );\r\n\r\n    jQuery(this.navBar.nativeElement).collapse('hide');\r\n  }\r\n\r\n}\r\n","module.exports = \"span {\\r\\n    margin-right: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\" [ngStyle]=\\\"{'opacity':opacity}\\\">\\r\\n    <!-- <img class=\\\"card-img-top img-fluid\\\" [src]=\\\"heroe.img\\\" [alt]=\\\"heroe.nombre\\\"> -->\\r\\n    <div class=\\\"card-body\\\">\\r\\n\\r\\n        <h4 class=\\\"card-title\\\">{{section.title}}\\r\\n            <span [class]=\\\"classBadge\\\">{{msgBadge}}</span>\\r\\n        </h4>\\r\\n\\r\\n        <p class=\\\"card-text\\\">{{section.description}}</p>\\r\\n        <p class=\\\"card-text\\\">\\r\\n            <small class=\\\"text-muted\\\">Null</small>\\r\\n        </p>\\r\\n\\r\\n        <button (click)=\\\"verSection()\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"disabledButton\\\">\\r\\n      Show levels\\r\\n    </button>\\r\\n\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Section } from '../../../history/model/section.model';\r\nimport { SectionsService } from '../../../history/services/sections.service';\r\n\r\n@Component({\r\n  selector: 'app-section-card',\r\n  templateUrl: './section-card.component.html',\r\n  styleUrls: ['./section-card.component.css']\r\n})\r\nexport class SectionCardComponent implements OnInit {\r\n  NAME_BADGE: string = \"badge badge-\"; \r\n\r\n  @Input() section: Section = new Section();\r\n  \r\n  classBadge:string;\r\n  msgBadge:string;\r\n  opacity:number = 1;\r\n  disabledButton:boolean;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.createBadge();\r\n  }\r\n\r\n  verSection() {\r\n    this.router.navigate( ['/section', this.section.orden] );\r\n  }\r\n\r\n  createBadge() {\r\n    if (!this.section.unlocked) {\r\n        this.classBadge = this.NAME_BADGE+\"danger\";\r\n        this.msgBadge = \"Lock\";\r\n        this.opacity = 0.5;\r\n        this.disabledButton = true;\r\n    } else if (this.section.completeAll) {\r\n        this.classBadge = this.NAME_BADGE+\"success\";\r\n        this.msgBadge = \"Complete\"\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card text-center text-white bg-warning mb-3\\\" style=\\\"width: 100%\\\">\\n  <div class=\\\"card-header\\\">\\n      <h2 class=\\\"display-5\\\">Trophies</h2>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n      <ul class=\\\"list-group text-dark text-left\\\" style=\\\"margin-bottom: 15px\\\">\\n          <li *ngFor=\\\"let trophy of trophies\\\" class=\\\"list-group-item list-group-item-light\\\">\\n              <div class=\\\"row\\\">\\n                  <img class=\\\"img-responsive\\\" [src]=\\\"getIcon(trophy)\\\" width=\\\"60\\\" height=\\\"60\\\">\\n                  <div class=\\\"col\\\">\\n                      <h4>{{trophy.challange.title}}</h4>\\n                      {{trophy.challange.description}}\\n                  </div>\\n              </div>\\n          </li>\\n      </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-trophies',\n  templateUrl: './trophies.component.html',\n  styleUrls: ['./trophies.component.css']\n})\nexport class TrophiesComponent implements OnInit {\n  \n  @Input()\n  trophies: any[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  getIcon(trophy:any) {\n    return trophy.complete ? \"assets/trophy.svg\" : \"assets/no-trophy.svg\";\n  }\n\n}\n","export class InfoUser {\r\n    levelsUnlock: string[] = [];\r\n    sectionsUnlock: string[] = [];\r\n    challangesComplete: string[] = [];\r\n    trophiesComplete: string[] = [];\r\n    newExp = 0;\r\n    newRank: any = {};\r\n\r\n    constructor(data: any) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        \r\n        this.levelsUnlock = data.levelsUnlock !== undefined ? data.levelsUnlock : [];\r\n        this.sectionsUnlock = data.sectionsUnlock !== undefined ? data.sectionsUnlock : [];\r\n        this.challangesComplete = data.challangesComplete !== undefined ? data.challangesComplete : [];\r\n        this.trophiesComplete = data.trophiesComplete !== undefined ? data.trophiesComplete : [];\r\n        this.newExp = data.newExp;\r\n        this.newRank = data.newRank;\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject  } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ExceptionService {\r\n    private subject = new Subject<any>();\r\n \r\n    sendException(status: string) {\r\n        this.subject.next(status);\r\n    }\r\n \r\n    clearException() {\r\n        this.subject.next();\r\n    }\r\n \r\n    getException(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HighlightJsModule } from 'ngx-highlight-js';\r\n\r\nimport { routing } from './shared.routing';\r\n\r\nimport { SectionCardComponent } from './components/section-card/section-card.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LevelCardComponent } from './components/level-card/level-card.component';\r\nimport { TrophiesComponent } from './components/trophies/trophies.component';\r\nimport { FormattedTextComponent } from './components/formatted-text/formatted-text.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ExceptionService } from './services/exception.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    routing,\r\n    FormsModule,\r\n    HighlightJsModule\r\n  ],\r\n  declarations: [\r\n    SectionCardComponent,\r\n    NavbarComponent,\r\n    LevelCardComponent,\r\n    TrophiesComponent,\r\n    FormattedTextComponent\r\n  ],\r\n  exports: [\r\n    SectionCardComponent,\r\n    NavbarComponent,\r\n    LevelCardComponent,\r\n    TrophiesComponent,\r\n    FormattedTextComponent\r\n  ], providers: [\r\n    ExceptionService\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nconst appRoutes: Routes = [\r\n];\r\n \r\nexport const routing = RouterModule.forChild(appRoutes);","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'http://192.168.1.114:8080'\r\n};\r\n\r\n/*export const environment = {\r\n  production: false,\r\n  baseUrl: 'http://192.168.1.111:8080'\r\n};*/\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}